services:
  django-app:
    container_name: fyp-django-app
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      DEBUG: 'True'
      DATABASE_URL: postgres://root:root@postgres-db:5432/db
    depends_on:
      - postgres-db
    restart: unless-stopped
    networks:
      - app_network

  postgres-db:
    container_name: fyp-postgres-db
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  # pgadmin:
  #   container_name: fyp-pgadmin
  #   image: dpage/pgadmin4
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: postgres
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - app_network
  #   depends_on:
  #     - postgres-db

  # ollama:
  #   container_name: fyp-ollama
  #   restart: unless-stopped
  #   image: ollama/ollama:latest
  #   runtime: nvidia
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #   volumes:
  #     - "./ollamadata:/root/.ollama"
  #   ports:
  #     - 11434:11434
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: all
  #             capabilities: [gpu]
  #   networks:
  #     - app_network
  #   entrypoint: ["/bin/bash", "-c"]
  #   command: |
  #     "ollama serve && \
  #     ollama pull llama3.2 && \
  #     ollama pull nomic-embed-text"
      

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  # ollamadata: